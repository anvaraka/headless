name: Publish CLI package to npm

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*" # Only trigger on version tags following semantic versioning (vX.X.X)

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install
        working-directory: ./packages/cli

      # Step 4: Build the project
      - name: Build the project
        run: npm run build
        working-directory: ./packages/cli

      # Step 5: Ensure it's a tag push
      - name: Check if itâ€™s a tag push
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "Tag detected - ${GITHUB_REF#refs/tags/}"

      # Step 6: Extract the tag version
      - name: Extract tag version
        if: startsWith(github.ref, 'refs/tags/')
        id: tag_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Step 7: Update package.json version
      - name: Update package.json version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd packages/cli
          npm version $VERSION --no-git-tag-version

      # Step 8: Commit version change
      - name: Commit version change
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add packages/cli/package.json
          git commit -m "chore(release): update version to $VERSION"
          git push origin HEAD

      # Step 9: Publish to npm
      - name: Publish to npm
        if: startsWith(github.ref, 'refs/tags/')
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: ./packages/cli
